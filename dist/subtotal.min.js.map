{"version":3,"sources":["/source/subtotal.coffee","subtotal.min.js"],"names":["callWithJQuery","extend","child","parent","ctor","this","constructor","key","hasProp","call","prototype","__super__","hasOwnProperty","pivotModule","exports","module","require","define","amd","jQuery","$","SubtotalPivotData","SubtotalRenderer","superClass","input","opts","processKey","record","totals","keys","attrs","f","addKey","attr","flatKey","k","len","ref","length","push","join","String","fromCharCode","slice","processRecord","colKey","fColKey","fRowKey","flatColKey","flatRowKey","i","j","m","n","results","rowKey","allTotal","rowTotals","rowKeys","rowAttrs","_this","aggregator","colTotals","colKeys","colAttrs","tree","l","ref1","results1","pivotUtilities","PivotData","pivotData","arrowCollapsed","arrowExpanded","buildColHeaderHeader","buildColHeaderHeaders","buildColHeaderHeadersClickEvents","buildColHeaders","buildColTotals","buildColTotalsHeader","buildGrandTotal","buildRowHeaderHeaders","buildRowHeaderHeadersClickEvents","buildRowHeaders","buildRowTotalsHeader","buildValues","collapseCol","collapseColsAt","collapseRow","collapseRowsAt","createCell","defaults","expandChildCol","expandChildRow","expandCol","expandColsAt","expandRow","expandRowsAt","main","processKeys","setColVisibility","toggleCol","toggleColHeaderHeader","toggleRow","toggleRowHeaderHeader","localeStrings","getRowKeys","getColKeys","cellType","className","textContent","attributes","th","val","document","createElement","setAttribute","keysArr","c","header","headers","lastCol","lastRow","node","nodePos","r","rMark","repeats","x","row","col","children","descendants","leaves","thead","colHeaderHeaders","tr","colAttr","appendChild","clickStatus","expandedCount","nHeaders","colspan","rowspan","colHeaderCols","onclick","event","window","target","getAttribute","colHeader","h","hh","style","parseInt","sTh","rowHeaderHeaders","rowAttr","rowHeaderRows","tbody","rowHeader","len1","td","totalAggregator","value","format","data-value","data-row","data-col","data-for","result","visibility","display","closest","find","css","not","colHeaderHeader","d","p","ref2","ch","gch","colSpan","rowHeaderHeader","classList","remove","contents","last","replaceWith","add","append","rowSpan","scrollIntoView","idx","nAttrs","nCols","indexOf","nRows","colHeaders","rowHeaders","setTimeout","subtotal_renderers","Table With Subtotal","pvtData","Table With Subtotal Bar Chart","barchart","Table With Subtotal Heatmap","heatmap","Table With Subtotal Row Heatmap","Table With Subtotal Col Heatmap"],"mappings":"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","file":"subtotal.min.js","sourcesContent":["callWithJQuery = (pivotModule) ->\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\n        pivotModule require(\"jquery\")\n    else if typeof define is \"function\" and define.amd # AMD\n        define [\"jquery\"], pivotModule\n    # Plain browser env\n    else\n        pivotModule jQuery\n\ncallWithJQuery ($) ->\n\n    class SubtotalPivotData extends $.pivotUtilities.PivotData\n        constructor: (input, opts) ->\n            super(input, opts)\n\n        processKey = (record, totals, keys, attrs, f) ->\n            key = []\n            addKey = false\n            for attr in attrs\n                key.push record[attr] ? \"null\"\n                flatKey = key.join(String.fromCharCode(0))\n                if not totals[flatKey]\n                    totals[flatKey] = f(key.slice())\n                    addKey = true\n                totals[flatKey].push record\n            if addKey\n                keys.push key\n            return key\n\n        processRecord: (record) -> #this code is called in a tight loop\n            rowKey = []\n            colKey = []\n\n            @allTotal.push record\n            rowKey = processKey record, @rowTotals, @rowKeys, @rowAttrs, (key) =>\n                    return @aggregator(this, key, [])\n            colKey = processKey record, @colTotals, @colKeys, @colAttrs, (key) =>\n                    return @aggregator(this, [], key)\n            m = rowKey.length-1\n            n = colKey.length-1\n            if m < 0 or n < 0\n                return\n            for i in [0..m]\n                fRowKey = rowKey.slice(0, i+1)\n                flatRowKey = fRowKey.join(String.fromCharCode(0))\n                if not @tree[flatRowKey]\n                    @tree[flatRowKey] = {}\n                for j in [0..n]\n                    fColKey = colKey.slice(0, j+1)\n                    flatColKey = fColKey.join(String.fromCharCode(0))\n                    if not @tree[flatRowKey][flatColKey]\n                        @tree[flatRowKey][flatColKey] = @aggregator(this, fRowKey, fColKey)\n                    @tree[flatRowKey][flatColKey].push record\n\n    $.pivotUtilities.SubtotalPivotData = SubtotalPivotData\n\n    SubtotalRenderer = (pivotData, opts) ->\n        defaults =\n            localeStrings:\n                totals: \"Totals\"\n\n        opts = $.extend defaults, opts\n\n        arrowCollapsed = \"\\u25B6\"\n        arrowExpanded = \"\\u25E2\"\n        colAttrs = pivotData.colAttrs\n        rowAttrs = pivotData.rowAttrs\n        rowKeys = pivotData.getRowKeys()\n        colKeys = pivotData.getColKeys()\n        tree = pivotData.tree\n        rowTotals = pivotData.rowTotals\n        colTotals = pivotData.colTotals\n        allTotal =pivotData.allTotal\n\n        createCell = (cellType, className, textContent, attributes) ->\n            th = document.createElement(cellType)\n            if className then th.className = className\n            if textContent isnt null and textContent isnt undefined then th.textContent = textContent\n            if attributes then th.setAttribute(attr, val) for own attr, val of attributes\n            return th\n\n        processKeys = (keysArr, className) ->\n            lastRow = keysArr.length - 1\n            lastCol = keysArr[0].length - 1\n            rMark = []\n            headers = []\n            th = createCell(\"th\", className, keysArr[0][0])\n            flatKey = keysArr[0][0]\n            nodePos = 0\n            node = {\"node\": nodePos, \"row\": 0, \"col\": 0, \"th\": th, \"parent\": null, \"children\": [], \"descendants\": lastCol, \"leaves\": 1, \"flatKey\": flatKey}\n            headers[0] = node\n            rMark[0] = node\n            c = 1\n            while c <= lastCol\n                th = createCell(\"th\", className, keysArr[0][c])\n                flatKey = flatKey + String.fromCharCode(0) + keysArr[0][c]\n                ++nodePos\n                node =  {\"node\": nodePos, \"row\": 0, \"col\": c, \"th\": th, \"parent\": rMark[c-1], \"children\": [], \"descendants\": lastCol-c, \"leaves\": 1, \"flatKey\": flatKey}\n                rMark[c] = node\n                rMark[c-1].children.push(node)\n                ++c\n            rMark[lastCol].leaves = 0\n            r = 1\n            while r <= lastRow\n                repeats = true\n                flatKey = \"\"\n                c = 0\n                while c <= lastCol\n                    flatKey = if c is 0 then keysArr[r][c] else flatKey + String.fromCharCode(0) + keysArr[r][c]\n                    if ((keysArr[r][c] is keysArr[rMark[c].row][c]) and (c isnt lastCol)  and (repeats))\n                        repeats = true\n                        ++c\n                        continue\n                    th = createCell(\"th\", className, keysArr[r][c])\n                    ++nodePos\n                    header = {\"node\": nodePos, \"row\": r, \"col\": c, \"th\": th, \"parent\": null, \"children\": [], \"descendants\": 0, \"leaves\": 1, \"flatKey\": flatKey}\n                    if c is 0\n                        headers.push header\n                    else\n                        header.parent = rMark[c-1]\n                        rMark[c-1].children.push header\n                        x = 0\n                        while x <= c-1\n                            rMark[x].descendants = rMark[x].descendants + 1\n                            ++x\n                    rMark[c] = header\n                    repeats = false\n                    ++c\n                c = 0\n                while c <= lastCol\n                    rMark[c].leaves = rMark[c].leaves + 1\n                    ++c\n                rMark[lastCol].leaves = 0\n                ++r\n            return headers\n\n        buildColHeaderHeader = (thead, colHeaderHeaders, rowAttrs, colAttrs, tr, col) ->\n            colAttr = colAttrs[col]\n            th = createCell(\"th\", \"pvtAxisLabel\", colAttr)\n            textContent = colAttr\n            if col < colAttrs.length-1\n                textContent = \" \" + arrowExpanded + \" \" + colAttr\n            th = createCell(\"th\", \"pvtAxisLabel\", textContent)\n            th.setAttribute(\"data-colAttr\", colAttr)\n            tr.appendChild th\n            colHeaderHeaders.push({\"tr\": tr, \"th\": th, \"clickStatus\": \"expanded\", \"expandedCount\": 0, \"nHeaders\": 0})\n            thead.appendChild tr\n\n        buildColHeaderHeaders = (thead, colHeaderHeaders, rowAttrs, colAttrs) ->\n            tr = document.createElement(\"tr\")\n            if rowAttrs.length != 0\n                tr.appendChild createCell(\"th\", null, null, {\"colspan\": rowAttrs.length, \"rowspan\": colAttrs.length});\n            buildColHeaderHeader thead, colHeaderHeaders, rowAttrs, colAttrs, tr, 0\n            for c in [1..colAttrs.length] when c < colAttrs.length\n                tr = document.createElement(\"tr\")\n                buildColHeaderHeader thead, colHeaderHeaders, rowAttrs, colAttrs, tr, c\n\n        buildColHeaderHeadersClickEvents = (colHeaderHeaders, colHeaderCols, colAttrs) ->\n            for i in [0..colAttrs.length-1] when i < colAttrs.length-1\n                th = colHeaderHeaders[i].th\n                colAttr = colAttrs[i]\n                th.onclick = (event) ->\n                    event = event || window.event\n                    toggleColHeaderHeader colHeaderHeaders, colHeaderCols, colAttrs, event.target.getAttribute(\"data-colAttr\")\n\n        buildColHeaders = (colHeaderHeaders, colHeaderCols, colHeader, rowAttrs, colAttrs) ->\n            # DF Recurse\n            for h in colHeader.children\n                buildColHeaders(colHeaderHeaders, colHeaderCols, h, rowAttrs, colAttrs)\n            # Process\n            hh = colHeaderHeaders[colHeader.col]\n            ++hh.expandedCount\n            ++hh.nHeaders\n            tr = hh.tr\n            th = colHeader.th\n            th.setAttribute(\"data-colHeader\", th.textContent)\n            if colHeader.col == colAttrs.length-1 and rowAttrs.length != 0\n                th.setAttribute(\"rowspan\", 2)\n            if colHeader.children.length !=0\n                th.setAttribute(\"colspan\", colHeader.descendants+1)\n            th.setAttribute(\"data-node\", colHeaderCols.length)\n            tr.appendChild(th)\n            if colHeader.children.length !=0\n                th.textContent = \" \" + arrowExpanded + \" \" + th.textContent\n                th.onclick = (event) ->\n                    event = event || window.event\n                    toggleCol(colHeaderHeaders, colHeaderCols, parseInt(event.target.getAttribute(\"data-node\")))\n                rowspan = colAttrs.length-(colHeader.col+1) + if rowAttrs.length != 0 then 1 else 0\n                style = \"pvtColLabel col\" + colHeader.row\n                th = createCell(\"th\", style, '', {\"rowspan\": rowspan})\n                colHeader.children[0].tr.appendChild(th)\n                colHeader.sTh = th\n            colHeader.clickStatus = \"expanded\"\n            colHeader.tr = tr\n            colHeaderCols.push(colHeader)\n\n        buildRowHeaderHeaders = (thead, rowHeaderHeaders, rowAttrs, colAttrs) ->\n            tr = document.createElement(\"tr\")\n            rowHeaderHeaders.hh = []\n            for own i, rowAttr of rowAttrs\n                textContent = rowAttr\n                if i < rowAttrs.length-1\n                    textContent = \" \" + arrowExpanded + \" \" + rowAttr\n                th = createCell(\"th\", \"pvtAxisLabel\", textContent)\n                th.setAttribute(\"data-rowAttr\", rowAttr)\n                tr.appendChild th\n                rowHeaderHeaders.hh.push({\"th\": th, \"clickStatus\": \"expanded\", \"expandedCount\": 0, \"nHeaders\": 0})\n            if colAttrs.length != 0\n                th = createCell(\"th\")\n                tr.appendChild th\n            thead.appendChild tr\n            rowHeaderHeaders.tr = tr\n\n        buildRowHeaderHeadersClickEvents = (rowHeaderHeaders, rowHeaderRows, rowAttrs) ->\n            for i in [0..rowAttrs.length-1] when i < rowAttrs.length-1\n                th = rowHeaderHeaders.hh[i]\n                rowAttr = rowAttrs[i]\n                th.th.onclick = (event) ->\n                    event = event || window.event\n                    toggleRowHeaderHeader rowHeaderHeaders, rowHeaderRows, rowAttrs, event.target.getAttribute(\"data-rowAttr\")\n\n        buildRowTotalsHeader = (tr, rowAttrs, colAttrs) ->\n            rowspan = 1\n            if colAttrs.length != 0\n                rowspan = colAttrs.length + (if rowAttrs.length ==0 then 0 else 1)\n            th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\"rowspan\": rowspan})\n            tr.appendChild th\n\n        buildRowHeaders = (tbody, rowHeaderHeaders, rowHeaderRows, rowHeader, rowAttrs, colAttrs) ->\n            hh = rowHeaderHeaders.hh[rowHeader.col]\n            ++hh.expandedCount\n            ++hh.nHeaders\n            tr = document.createElement(\"tr\")\n            th = rowHeader.th\n            th.setAttribute(\"rowspan\", rowHeader.descendants+1)\n            th.setAttribute(\"data-rowHeader\", th.textContent)\n            if rowHeader.col == rowAttrs.length-1 and colAttrs.length != 0\n                th.setAttribute(\"colspan\", 2)\n            th.setAttribute(\"data-node\", rowHeaderRows.length)\n            tr.appendChild(th)\n            if rowHeader.children.length != 0\n                th.textContent = \" \" + arrowExpanded + \" \" + th.textContent\n                th.onclick = (event) ->\n                    event = event || window.event\n                    toggleRow(rowHeaderHeaders, rowHeaderRows, parseInt(event.target.getAttribute(\"data-node\")))\n                colspan = rowAttrs.length-(rowHeader.col+1) + if colAttrs.length != 0 then 1 else 0\n                th = createCell(\"th\", \"pvtRowLabel\", '', {\"colspan\": colspan})\n                tr.appendChild(th)\n            rowHeader.clickStatus = \"expanded\"\n            rowHeader.tr = tr\n            rowHeaderRows.push(rowHeader)\n            tbody.appendChild(tr)\n            for h in rowHeader.children\n                buildRowHeaders(tbody, rowHeaderHeaders, rowHeaderRows, h, rowAttrs, colAttrs)\n\n        buildValues = (rowHeaderRows, colHeaderCols) ->\n            for rowHeader in rowHeaderRows\n                tr = rowHeader.tr\n                flatRowKey = rowHeader.flatKey\n                for colHeader in colHeaderCols\n                    flatColKey = colHeader.flatKey\n                    aggregator = tree[flatRowKey][flatColKey] ? {value: (-> null), format: -> \"\"}\n                    val = aggregator.value()\n                    style = \"pvtVal\"\n                    style = if (colHeader.children.length != 0) then  style +  \" pvtColSubtotal\" else style\n                    style = if (rowHeader.children.length != 0) then  style +  \" pvtRowSubtotal\" else style\n                    style = style + \" row\"+rowHeader.row+\" col\"+colHeader.row+\" rowcol\"+rowHeader.col+\" colcol\"+colHeader.col\n                    td = createCell(\"td\", style, aggregator.format(val), {\"data-value\": val})\n                    tr.appendChild td\n                # buildRowTotal\n                totalAggregator = rowTotals[flatRowKey]\n                val = totalAggregator.value()\n                style = \"pvtTotal rowTotal\"\n                style = if (rowHeader.children.length != 0) then  style +  \" pvtRowSubtotal\" else style\n                style = style + \" row\"+rowHeader.row+\" rowcol\"+rowHeader.col\n                td = createCell(\"td\", style, totalAggregator.format(val), {\"data-value\": val, \"data-row\": \"row\"+rowHeader.row, \"data-col\": \"col\"+rowHeader.col})\n                tr.appendChild td\n\n        buildColTotalsHeader = (rowAttrs, colAttrs) ->\n            tr = document.createElement(\"tr\")\n            colspan = rowAttrs.length + (if colAttrs.length == 0 then 0 else 1)\n            th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\"colspan\": colspan})\n            tr.appendChild(th)\n            return tr\n\n        buildColTotals = (tr, colHeaderCols) ->\n            for h in colHeaderCols\n                totalAggregator = colTotals[h.flatKey]\n                val = totalAggregator.value()\n                style = \"pvtVal pvtTotal colTotal\"\n                style = if h.children.length then style + \" pvtColSubtotal\" else style\n                style = style + \" col\"+h.row+\" colcol\"+h.col\n                td = createCell(\"td\", style, totalAggregator.format(val), {\"data-value\": val, \"data-for\": \"col\"+h.col})\n                tr.appendChild td\n\n        buildGrandTotal = (result, tr) ->\n            totalAggregator = allTotal\n            val = totalAggregator.value()\n            td = createCell(\"td\", \"pvtGrandTotal\", totalAggregator.format(val), {\"data-value\": val})\n            tr.appendChild td\n            result.appendChild tr\n\n        setColVisibility = (visibility, h) ->\n            h.th.style.display = visibility\n            if h.children.length\n                $(h.th).closest('table.pvtTable').find('tbody tr td.pvtColSubtotal.col' + h.row + '.colcol' + h.col).css('display', visibility)\n            else\n                $(h.th).closest('table.pvtTable').find('tbody tr td.pvtVal.col' + h.row).not('.pvtColSubtotal').css('display', visibility)\n            if h.sTh\n                h.sTh.style.display = visibility\n\n        collapseCol = (colHeaderHeaders, colHeaderCols, c) ->\n            if not colHeaderCols[c]\n                return\n            h = colHeaderCols[c]\n            if h.clickStatus is \"collapsed\"\n                return\n            colspan = 0\n            for i in [1..h.descendants] when h.descendants != 0\n                d = colHeaderCols[c-i]\n                if d.th.style.display isnt \"none\"\n                    ++colspan\n                    setColVisibility \"none\", d\n            p = h.parent\n            while p isnt null\n                p.th.setAttribute(\"colspan\", parseInt(p.th.getAttribute(\"colspan\"))-colspan)\n                p = p.parent\n            if h.descendants != 0\n                h.th.textContent = \" \" + arrowCollapsed + \" \" + h.th.getAttribute(\"data-colHeader\")\n            h.clickStatus = \"collapsed\"\n            h.th.setAttribute(\"colspan\", 1)\n            h.th.style.display = \"\"\n            colHeaderHeader = colHeaderHeaders[h.col]\n            colHeaderHeader.expandedCount--\n            if colHeaderHeader.expandedCount == 0\n                for i in [h.col..colHeaderHeaders.length-2]\n                    colHeaderHeader = colHeaderHeaders[i]\n                    colHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + colHeaderHeader.th.getAttribute(\"data-colAttr\")\n                    colHeaderHeader.clickStatus = \"collapsed\"\n\n        expandChildCol = (ch) ->\n            if ch.th.style.display is \"none\"\n                setColVisibility \"\", ch\n            if ch.clickStatus isnt \"collapsed\"\n                for gch in ch.children\n                    expandChildCol gch\n\n        expandCol = (colHeaderHeaders, colHeaderCols, c) ->\n            if not colHeaderCols[c]\n                return\n            h = colHeaderCols[c]\n            if h.clickStatus is \"expanded\"\n                return\n            colspan = 0\n            for ch in h.children\n                colspan = colspan + ch.th.colSpan\n                if ch.th.style.display is \"none\"\n                    setColVisibility \"\", ch\n                expandChildCol ch\n            if h.descendants != 0\n                h.th.textContent = \" \" + arrowExpanded + \" \" + h.th.getAttribute(\"data-colHeader\")\n            h.th.setAttribute(\"colspan\", colspan+1)\n            h.clickStatus = \"expanded\"\n            h.th.style.display = \"\"\n            if h.sTh\n                h.sTh.style.display = \"\"\n            p = h.parent\n            while p isnt null\n                p.th.setAttribute(\"colspan\", (colspan + parseInt(p.th.getAttribute(\"colspan\"))))\n                p = p.parent\n            hh = colHeaderHeaders[h.col]\n            ++hh.expandedCount\n            if hh.expandedCount == hh.nHeaders\n                hh.th.textContent = \" \" + arrowExpanded + \" \" + hh.th.getAttribute(\"data-colAttr\")\n                hh.clickStatus = \"expanded\"\n\n        collapseRow = (rowHeaderHeaders, rowHeaderRows, r) ->\n            if not rowHeaderRows[r]\n                return\n            h = rowHeaderRows[r]\n            if h.clickStatus is \"collapsed\"\n                return\n            h.tr.classList.remove(\"expanded\");\n            $(h.tr.children[1]).contents().last().replaceWith(\"\");\n            rowspan = 0\n            for i in [1..h.descendants] when h.descendants != 0\n                d = rowHeaderRows[r+i]\n                if d.tr.style.display isnt \"none\"\n                    ++rowspan\n                    d.tr.style.display = \"none\"\n            p = h.parent\n            while p isnt null\n                p.th.setAttribute(\"rowspan\", parseInt(p.th.getAttribute(\"rowspan\"))-rowspan)\n                p = p.parent\n            if h.descendants != 0\n                h.th.textContent = \" \" + arrowCollapsed + \" \" + h.th.getAttribute(\"data-rowHeader\")\n            h.clickStatus = \"collapsed\"\n            h.th.setAttribute(\"rowspan\", 1)\n            h.tr.style.display = \"\"\n            rowHeaderHeader = rowHeaderHeaders.hh[h.col]\n            rowHeaderHeader.expandedCount--\n            if rowHeaderHeader.expandedCount == 0\n                for j in [h.col..rowHeaderHeaders.hh.length-2]\n                    rowHeaderHeader = rowHeaderHeaders.hh[j]\n                    rowHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + rowHeaderHeader.th.getAttribute(\"data-rowAttr\")\n                    rowHeaderHeader.clickStatus = \"collapsed\"\n\n        expandChildRow = (ch) ->\n            if ch.tr.style.display is \"none\"\n                ch.tr.style.display = \"\"\n            if ch.clickStatus isnt \"collapsed\"\n                for gch in ch.children\n                    expandChildRow gch\n\n        expandRow = (rowHeaderHeaders, rowHeaderRows, r) ->\n            if not rowHeaderRows[r]\n                return\n            h = rowHeaderRows[r]\n            if h.clickStatus is \"expanded\"\n                return\n            h.tr.classList.add(\"expanded\");\n            $(h.tr.children[1]).append(\"Total\");\n            rowspan = 0\n            for ch in h.children\n                rowspan = rowspan + ch.th.rowSpan\n                if ch.tr.style.display is \"none\"\n                    ch.tr.style.display = \"\"\n                expandChildRow ch\n            if h.descendants != 0\n                h.th.textContent = \" \" + arrowExpanded + \" \" + h.th.getAttribute(\"data-rowHeader\")\n            h.th.setAttribute(\"rowspan\", rowspan+1)\n            h.clickStatus = \"expanded\"\n            h.tr.style.display = \"\"\n            p = h.parent\n            while p isnt null\n                p.th.setAttribute(\"rowspan\", (rowspan + parseInt(p.th.getAttribute(\"rowspan\"))))\n                p = p.parent\n            hh = rowHeaderHeaders.hh[h.col]\n            ++hh.expandedCount\n            if hh.expandedCount == hh.nHeaders\n                hh.th.textContent = \" \" + arrowExpanded + \" \" + hh.th.getAttribute(\"data-rowAttr\")\n                hh.clickStatus = \"expanded\"\n\n        toggleCol = (colHeaderHeaders, colHeaderCols, c) ->\n            if not colHeaderCols[c]\n                return\n            h = colHeaderCols[c]\n            if h.clickStatus is \"collapsed\"\n                expandCol(colHeaderHeaders, colHeaderCols, c)\n            else\n                collapseCol(colHeaderHeaders, colHeaderCols, c)\n            h.th.scrollIntoView\n\n        toggleRow = (rowHeaderHeaders, rowHeaderRows, r) ->\n            if not rowHeaderRows[r]\n                return\n            if rowHeaderRows[r].clickStatus is \"collapsed\"\n                expandRow(rowHeaderHeaders, rowHeaderRows, r)\n            else\n                collapseRow(rowHeaderHeaders, rowHeaderRows, r)\n\n        collapseColsAt = (colHeaderHeaders, colHeaderCols, colAttrs, colAttr) ->\n            idx = colAttrs.indexOf(colAttr)\n            if idx < 0 or idx == colAttrs.length-1\n                return\n            i = idx\n            nAttrs = colAttrs.length-1\n            while i < nAttrs\n                hh = colHeaderHeaders[i]\n                hh.th.textContent = \" \" + arrowCollapsed + \" \" + colAttrs[i]\n                hh.clickStatus = \"collapsed\"\n                ++i\n            i = 0\n            nCols = colHeaderCols.length\n            while i < nCols\n                h = colHeaderCols[i]\n                if h.col is idx and h.clickStatus isnt \"collapsed\" and h.th.style.display isnt \"none\"\n                    collapseCol(colHeaderHeaders, colHeaderCols, parseInt(h.th.getAttribute(\"data-node\")))\n                ++i\n\n        expandColsAt = (colHeaderHeaders, colHeaderCols, colAttrs, colAttr) ->\n            idx = colAttrs.indexOf(colAttr)\n            if idx < 0 or idx == colAttrs.length-1\n                return\n            for i in [0..idx]\n                hh = colHeaderHeaders[i]\n                hh.th.textContent = \" \" + arrowExpanded + \" \" + colAttrs[i]\n                hh.clickStatus = \"expanded\"\n                j = 0\n                nCols = colHeaderCols.length\n                while j < nCols\n                    h = colHeaderCols[j]\n                    if h.col == i\n                        expandCol(colHeaderHeaders, colHeaderCols, j)\n                    ++j\n            ++idx\n            while idx < colAttrs.length-1\n                colHeaderHeader = colHeaderHeaders[idx]\n                if colHeaderHeader.expandedCount == 0\n                    colHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + colAttrs[idx]\n                    colHeaderHeader.clickStatus = \"collapsed\"\n                else if colHeaderHeader.expandedCount == colHeaderHeader.nHeaders\n                    colHeaderHeader.th.textContent = \" \" + arrowExpanded + \" \" + colAttrs[idx]\n                    colHeaderHeader.clickStatus = \"expanded\"\n                ++idx\n\n        collapseRowsAt = (rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) ->\n            idx = rowAttrs.indexOf(rowAttr)\n            if idx < 0 or idx == rowAttrs.length-1\n                return\n            i = idx\n            nAttrs = rowAttrs.length-1\n            while i < nAttrs\n                h = rowHeaderHeaders.hh[i]\n                h.th.textContent = \" \" + arrowCollapsed + \" \" + rowAttrs[i]\n                h.clickStatus = \"collapsed\"\n                ++i\n            j = 0\n            nRows = rowHeaderRows.length\n            while j < nRows\n                h = rowHeaderRows[j]\n                if h.col is idx and h.clickStatus isnt \"collapsed\" and h.tr.style.display isnt \"none\"\n                    collapseRow(rowHeaderHeaders, rowHeaderRows, j)\n                    j = j + h.descendants + 1\n                else\n                    ++j\n\n        expandRowsAt = (rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) ->\n            idx = rowAttrs.indexOf(rowAttr)\n            if idx < 0 or idx == rowAttrs.length-1\n                return\n            for i in [0..idx]\n                hh = rowHeaderHeaders.hh[i]\n                hh.th.textContent = \" \" + arrowExpanded + \" \" + rowAttrs[i]\n                hh.clickStatus = \"expanded\"\n                j = 0\n                nRows = rowHeaderRows.length\n                while j < nRows\n                    h = rowHeaderRows[j]\n                    if h.col == i\n                        expandRow(rowHeaderHeaders, rowHeaderRows, j)\n                        j = j + h.descendants + 1\n                    else\n                        ++j\n            ++idx\n            while idx < rowAttrs.length-1\n                rowHeaderHeader = rowHeaderHeaders.hh[idx]\n                if rowHeaderHeader.expandedCount == 0\n                    rowHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + rowAttrs[idx]\n                    rowHeaderHeader.clickStatus = \"collapsed\"\n                else if rowHeaderHeader.expandedCount == rowHeaderHeader.nHeaders\n                    rowHeaderHeader.th.textContent = \" \" + arrowExpanded + \" \" + rowAttrs[idx]\n                    rowHeaderHeader.clickStatus = \"expanded\"\n                ++idx\n\n        toggleColHeaderHeader = (colHeaderHeaders, colHeaderCols, colAttrs, colAttr) ->\n            idx = colAttrs.indexOf(colAttr)\n            h = colHeaderHeaders[idx]\n            if h.clickStatus is \"collapsed\"\n                expandColsAt colHeaderHeaders, colHeaderCols, colAttrs, colAttr\n            else\n                collapseColsAt colHeaderHeaders, colHeaderCols, colAttrs, colAttr\n\n\n        toggleRowHeaderHeader = (rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) ->\n            idx = rowAttrs.indexOf(rowAttr)\n            th = rowHeaderHeaders.hh[idx]\n            if th.clickStatus is \"collapsed\"\n                expandRowsAt rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr\n            else\n                collapseRowsAt rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr\n\n        main = (rowAttrs, rowKeys, colAttrs, colKeys) ->\n            rowHeaders = []\n            colHeaders = []\n            rowHeaderHeaders = {}\n            rowHeaderRows = []\n            colHeaderHeaders = []\n            colHeaderCols = []\n\n            if rowAttrs.length != 0\n                rowHeaders = processKeys(rowKeys, \"pvtRowLabel\")\n            if colAttrs.length != 0\n                colHeaders = processKeys(colKeys, \"pvtColLabel\")\n            result = document.createElement(\"table\")\n            result.className = \"pvtTable\"\n            result.style.display = \"none\"\n            thead = document.createElement(\"thead\")\n            result.appendChild thead\n            if colAttrs.length != 0\n                buildColHeaderHeaders(thead, colHeaderHeaders, rowAttrs, colAttrs)\n                for h in colHeaders\n                   buildColHeaders colHeaderHeaders, colHeaderCols, h, rowAttrs, colAttrs\n                buildColHeaderHeadersClickEvents colHeaderHeaders, colHeaderCols, colAttrs\n            if rowAttrs.length != 0\n                buildRowHeaderHeaders(thead, rowHeaderHeaders, rowAttrs, colAttrs)\n                if colAttrs.length == 0\n                    buildRowTotalsHeader(rowHeaderHeaders.tr, rowAttrs, colAttrs)\n            if colAttrs.length != 0\n                buildRowTotalsHeader(colHeaderHeaders[0].tr, rowAttrs, colAttrs)\n            tbody = document.createElement(\"tbody\")\n            result.appendChild tbody\n            if rowAttrs.length != 0\n                for h in rowHeaders\n                    buildRowHeaders tbody, rowHeaderHeaders, rowHeaderRows, h, rowAttrs, colAttrs\n                buildRowHeaderHeadersClickEvents rowHeaderHeaders, rowHeaderRows, rowAttrs\n            buildValues(rowHeaderRows, colHeaderCols)\n            tr = buildColTotalsHeader(rowAttrs, colAttrs)\n            if colAttrs.length != 0\n                buildColTotals(tr, colHeaderCols)\n            buildGrandTotal(tbody, tr)\n            result.setAttribute(\"data-numrows\", rowKeys.length)\n            result.setAttribute(\"data-numcols\", colKeys.length)\n            if not opts.collapseRowsAt and not opts.collapseColsAt\n                result.style.display = \"\"\n            if opts.collapseRowsAt\n                setTimeout (->\n                    collapseRowsAt rowHeaderHeaders, rowHeaderRows, rowAttrs, opts.collapseRowsAt\n                    if not opts.collapseColsAt\n                        result.style.display = \"\"\n                ), 0\n            if opts.collapseColsAt\n                setTimeout (->\n                    collapseColsAt colHeaderHeaders, colHeaderCols, colAttrs, opts.collapseColsAt\n                    result.style.display = \"\"\n                ), 0\n            return result\n\n        return main(rowAttrs, rowKeys, colAttrs, colKeys)\n\n    $.pivotUtilities.subtotal_renderers =\n        \"Table With Subtotal\":  (pvtData, opts) -> SubtotalRenderer(pvtData, opts)\n        \"Table With Subtotal Bar Chart\":   (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).barchart()\n        \"Table With Subtotal Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).heatmap(\"heatmap\", opts)\n        \"Table With Subtotal Row Heatmap\":   (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).heatmap(\"rowheatmap\", opts)\n        \"Table With Subtotal Col Heatmap\":  (pvtData, opts) -> $(SubtotalRenderer(pvtData, opts)).heatmap(\"colheatmap\", opts)\n","(function() {\n  var callWithJQuery,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  callWithJQuery = function(pivotModule) {\n    if (typeof exports === \"object\" && typeof module === \"object\") {\n      return pivotModule(require(\"jquery\"));\n    } else if (typeof define === \"function\" && define.amd) {\n      return define([\"jquery\"], pivotModule);\n    } else {\n      return pivotModule(jQuery);\n    }\n  };\n\n  callWithJQuery(function($) {\n    var SubtotalPivotData, SubtotalRenderer;\n    SubtotalPivotData = (function(superClass) {\n      var processKey;\n\n      extend(SubtotalPivotData, superClass);\n\n      function SubtotalPivotData(input, opts) {\n        SubtotalPivotData.__super__.constructor.call(this, input, opts);\n      }\n\n      processKey = function(record, totals, keys, attrs, f) {\n        var addKey, attr, flatKey, k, key, len, ref;\n        key = [];\n        addKey = false;\n        for (k = 0, len = attrs.length; k < len; k++) {\n          attr = attrs[k];\n          key.push((ref = record[attr]) != null ? ref : \"null\");\n          flatKey = key.join(String.fromCharCode(0));\n          if (!totals[flatKey]) {\n            totals[flatKey] = f(key.slice());\n            addKey = true;\n          }\n          totals[flatKey].push(record);\n        }\n        if (addKey) {\n          keys.push(key);\n        }\n        return key;\n      };\n\n      SubtotalPivotData.prototype.processRecord = function(record) {\n        var colKey, fColKey, fRowKey, flatColKey, flatRowKey, i, j, k, m, n, ref, results, rowKey;\n        rowKey = [];\n        colKey = [];\n        this.allTotal.push(record);\n        rowKey = processKey(record, this.rowTotals, this.rowKeys, this.rowAttrs, (function(_this) {\n          return function(key) {\n            return _this.aggregator(_this, key, []);\n          };\n        })(this));\n        colKey = processKey(record, this.colTotals, this.colKeys, this.colAttrs, (function(_this) {\n          return function(key) {\n            return _this.aggregator(_this, [], key);\n          };\n        })(this));\n        m = rowKey.length - 1;\n        n = colKey.length - 1;\n        if (m < 0 || n < 0) {\n          return;\n        }\n        results = [];\n        for (i = k = 0, ref = m; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {\n          fRowKey = rowKey.slice(0, i + 1);\n          flatRowKey = fRowKey.join(String.fromCharCode(0));\n          if (!this.tree[flatRowKey]) {\n            this.tree[flatRowKey] = {};\n          }\n          results.push((function() {\n            var l, ref1, results1;\n            results1 = [];\n            for (j = l = 0, ref1 = n; 0 <= ref1 ? l <= ref1 : l >= ref1; j = 0 <= ref1 ? ++l : --l) {\n              fColKey = colKey.slice(0, j + 1);\n              flatColKey = fColKey.join(String.fromCharCode(0));\n              if (!this.tree[flatRowKey][flatColKey]) {\n                this.tree[flatRowKey][flatColKey] = this.aggregator(this, fRowKey, fColKey);\n              }\n              results1.push(this.tree[flatRowKey][flatColKey].push(record));\n            }\n            return results1;\n          }).call(this));\n        }\n        return results;\n      };\n\n      return SubtotalPivotData;\n\n    })($.pivotUtilities.PivotData);\n    $.pivotUtilities.SubtotalPivotData = SubtotalPivotData;\n    SubtotalRenderer = function(pivotData, opts) {\n      var allTotal, arrowCollapsed, arrowExpanded, buildColHeaderHeader, buildColHeaderHeaders, buildColHeaderHeadersClickEvents, buildColHeaders, buildColTotals, buildColTotalsHeader, buildGrandTotal, buildRowHeaderHeaders, buildRowHeaderHeadersClickEvents, buildRowHeaders, buildRowTotalsHeader, buildValues, colAttrs, colKeys, colTotals, collapseCol, collapseColsAt, collapseRow, collapseRowsAt, createCell, defaults, expandChildCol, expandChildRow, expandCol, expandColsAt, expandRow, expandRowsAt, main, processKeys, rowAttrs, rowKeys, rowTotals, setColVisibility, toggleCol, toggleColHeaderHeader, toggleRow, toggleRowHeaderHeader, tree;\n      defaults = {\n        localeStrings: {\n          totals: \"Totals\"\n        }\n      };\n      opts = $.extend(defaults, opts);\n      arrowCollapsed = \"\\u25B6\";\n      arrowExpanded = \"\\u25E2\";\n      colAttrs = pivotData.colAttrs;\n      rowAttrs = pivotData.rowAttrs;\n      rowKeys = pivotData.getRowKeys();\n      colKeys = pivotData.getColKeys();\n      tree = pivotData.tree;\n      rowTotals = pivotData.rowTotals;\n      colTotals = pivotData.colTotals;\n      allTotal = pivotData.allTotal;\n      createCell = function(cellType, className, textContent, attributes) {\n        var attr, th, val;\n        th = document.createElement(cellType);\n        if (className) {\n          th.className = className;\n        }\n        if (textContent !== null && textContent !== void 0) {\n          th.textContent = textContent;\n        }\n        if (attributes) {\n          for (attr in attributes) {\n            if (!hasProp.call(attributes, attr)) continue;\n            val = attributes[attr];\n            th.setAttribute(attr, val);\n          }\n        }\n        return th;\n      };\n      processKeys = function(keysArr, className) {\n        var c, flatKey, header, headers, lastCol, lastRow, node, nodePos, r, rMark, repeats, th, x;\n        lastRow = keysArr.length - 1;\n        lastCol = keysArr[0].length - 1;\n        rMark = [];\n        headers = [];\n        th = createCell(\"th\", className, keysArr[0][0]);\n        flatKey = keysArr[0][0];\n        nodePos = 0;\n        node = {\n          \"node\": nodePos,\n          \"row\": 0,\n          \"col\": 0,\n          \"th\": th,\n          \"parent\": null,\n          \"children\": [],\n          \"descendants\": lastCol,\n          \"leaves\": 1,\n          \"flatKey\": flatKey\n        };\n        headers[0] = node;\n        rMark[0] = node;\n        c = 1;\n        while (c <= lastCol) {\n          th = createCell(\"th\", className, keysArr[0][c]);\n          flatKey = flatKey + String.fromCharCode(0) + keysArr[0][c];\n          ++nodePos;\n          node = {\n            \"node\": nodePos,\n            \"row\": 0,\n            \"col\": c,\n            \"th\": th,\n            \"parent\": rMark[c - 1],\n            \"children\": [],\n            \"descendants\": lastCol - c,\n            \"leaves\": 1,\n            \"flatKey\": flatKey\n          };\n          rMark[c] = node;\n          rMark[c - 1].children.push(node);\n          ++c;\n        }\n        rMark[lastCol].leaves = 0;\n        r = 1;\n        while (r <= lastRow) {\n          repeats = true;\n          flatKey = \"\";\n          c = 0;\n          while (c <= lastCol) {\n            flatKey = c === 0 ? keysArr[r][c] : flatKey + String.fromCharCode(0) + keysArr[r][c];\n            if ((keysArr[r][c] === keysArr[rMark[c].row][c]) && (c !== lastCol) && repeats) {\n              repeats = true;\n              ++c;\n              continue;\n            }\n            th = createCell(\"th\", className, keysArr[r][c]);\n            ++nodePos;\n            header = {\n              \"node\": nodePos,\n              \"row\": r,\n              \"col\": c,\n              \"th\": th,\n              \"parent\": null,\n              \"children\": [],\n              \"descendants\": 0,\n              \"leaves\": 1,\n              \"flatKey\": flatKey\n            };\n            if (c === 0) {\n              headers.push(header);\n            } else {\n              header.parent = rMark[c - 1];\n              rMark[c - 1].children.push(header);\n              x = 0;\n              while (x <= c - 1) {\n                rMark[x].descendants = rMark[x].descendants + 1;\n                ++x;\n              }\n            }\n            rMark[c] = header;\n            repeats = false;\n            ++c;\n          }\n          c = 0;\n          while (c <= lastCol) {\n            rMark[c].leaves = rMark[c].leaves + 1;\n            ++c;\n          }\n          rMark[lastCol].leaves = 0;\n          ++r;\n        }\n        return headers;\n      };\n      buildColHeaderHeader = function(thead, colHeaderHeaders, rowAttrs, colAttrs, tr, col) {\n        var colAttr, textContent, th;\n        colAttr = colAttrs[col];\n        th = createCell(\"th\", \"pvtAxisLabel\", colAttr);\n        textContent = colAttr;\n        if (col < colAttrs.length - 1) {\n          textContent = \" \" + arrowExpanded + \" \" + colAttr;\n        }\n        th = createCell(\"th\", \"pvtAxisLabel\", textContent);\n        th.setAttribute(\"data-colAttr\", colAttr);\n        tr.appendChild(th);\n        colHeaderHeaders.push({\n          \"tr\": tr,\n          \"th\": th,\n          \"clickStatus\": \"expanded\",\n          \"expandedCount\": 0,\n          \"nHeaders\": 0\n        });\n        return thead.appendChild(tr);\n      };\n      buildColHeaderHeaders = function(thead, colHeaderHeaders, rowAttrs, colAttrs) {\n        var c, k, ref, results, tr;\n        tr = document.createElement(\"tr\");\n        if (rowAttrs.length !== 0) {\n          tr.appendChild(createCell(\"th\", null, null, {\n            \"colspan\": rowAttrs.length,\n            \"rowspan\": colAttrs.length\n          }));\n        }\n        buildColHeaderHeader(thead, colHeaderHeaders, rowAttrs, colAttrs, tr, 0);\n        results = [];\n        for (c = k = 1, ref = colAttrs.length; 1 <= ref ? k <= ref : k >= ref; c = 1 <= ref ? ++k : --k) {\n          if (!(c < colAttrs.length)) {\n            continue;\n          }\n          tr = document.createElement(\"tr\");\n          results.push(buildColHeaderHeader(thead, colHeaderHeaders, rowAttrs, colAttrs, tr, c));\n        }\n        return results;\n      };\n      buildColHeaderHeadersClickEvents = function(colHeaderHeaders, colHeaderCols, colAttrs) {\n        var colAttr, i, k, ref, results, th;\n        results = [];\n        for (i = k = 0, ref = colAttrs.length - 1; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {\n          if (!(i < colAttrs.length - 1)) {\n            continue;\n          }\n          th = colHeaderHeaders[i].th;\n          colAttr = colAttrs[i];\n          results.push(th.onclick = function(event) {\n            event = event || window.event;\n            return toggleColHeaderHeader(colHeaderHeaders, colHeaderCols, colAttrs, event.target.getAttribute(\"data-colAttr\"));\n          });\n        }\n        return results;\n      };\n      buildColHeaders = function(colHeaderHeaders, colHeaderCols, colHeader, rowAttrs, colAttrs) {\n        var h, hh, k, len, ref, rowspan, style, th, tr;\n        ref = colHeader.children;\n        for (k = 0, len = ref.length; k < len; k++) {\n          h = ref[k];\n          buildColHeaders(colHeaderHeaders, colHeaderCols, h, rowAttrs, colAttrs);\n        }\n        hh = colHeaderHeaders[colHeader.col];\n        ++hh.expandedCount;\n        ++hh.nHeaders;\n        tr = hh.tr;\n        th = colHeader.th;\n        th.setAttribute(\"data-colHeader\", th.textContent);\n        if (colHeader.col === colAttrs.length - 1 && rowAttrs.length !== 0) {\n          th.setAttribute(\"rowspan\", 2);\n        }\n        if (colHeader.children.length !== 0) {\n          th.setAttribute(\"colspan\", colHeader.descendants + 1);\n        }\n        th.setAttribute(\"data-node\", colHeaderCols.length);\n        tr.appendChild(th);\n        if (colHeader.children.length !== 0) {\n          th.textContent = \" \" + arrowExpanded + \" \" + th.textContent;\n          th.onclick = function(event) {\n            event = event || window.event;\n            return toggleCol(colHeaderHeaders, colHeaderCols, parseInt(event.target.getAttribute(\"data-node\")));\n          };\n          rowspan = colAttrs.length - (colHeader.col + 1) + (rowAttrs.length !== 0 ? 1 : 0);\n          style = \"pvtColLabel col\" + colHeader.row;\n          th = createCell(\"th\", style, '', {\n            \"rowspan\": rowspan\n          });\n          colHeader.children[0].tr.appendChild(th);\n          colHeader.sTh = th;\n        }\n        colHeader.clickStatus = \"expanded\";\n        colHeader.tr = tr;\n        return colHeaderCols.push(colHeader);\n      };\n      buildRowHeaderHeaders = function(thead, rowHeaderHeaders, rowAttrs, colAttrs) {\n        var i, rowAttr, textContent, th, tr;\n        tr = document.createElement(\"tr\");\n        rowHeaderHeaders.hh = [];\n        for (i in rowAttrs) {\n          if (!hasProp.call(rowAttrs, i)) continue;\n          rowAttr = rowAttrs[i];\n          textContent = rowAttr;\n          if (i < rowAttrs.length - 1) {\n            textContent = \" \" + arrowExpanded + \" \" + rowAttr;\n          }\n          th = createCell(\"th\", \"pvtAxisLabel\", textContent);\n          th.setAttribute(\"data-rowAttr\", rowAttr);\n          tr.appendChild(th);\n          rowHeaderHeaders.hh.push({\n            \"th\": th,\n            \"clickStatus\": \"expanded\",\n            \"expandedCount\": 0,\n            \"nHeaders\": 0\n          });\n        }\n        if (colAttrs.length !== 0) {\n          th = createCell(\"th\");\n          tr.appendChild(th);\n        }\n        thead.appendChild(tr);\n        return rowHeaderHeaders.tr = tr;\n      };\n      buildRowHeaderHeadersClickEvents = function(rowHeaderHeaders, rowHeaderRows, rowAttrs) {\n        var i, k, ref, results, rowAttr, th;\n        results = [];\n        for (i = k = 0, ref = rowAttrs.length - 1; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {\n          if (!(i < rowAttrs.length - 1)) {\n            continue;\n          }\n          th = rowHeaderHeaders.hh[i];\n          rowAttr = rowAttrs[i];\n          results.push(th.th.onclick = function(event) {\n            event = event || window.event;\n            return toggleRowHeaderHeader(rowHeaderHeaders, rowHeaderRows, rowAttrs, event.target.getAttribute(\"data-rowAttr\"));\n          });\n        }\n        return results;\n      };\n      buildRowTotalsHeader = function(tr, rowAttrs, colAttrs) {\n        var rowspan, th;\n        rowspan = 1;\n        if (colAttrs.length !== 0) {\n          rowspan = colAttrs.length + (rowAttrs.length === 0 ? 0 : 1);\n        }\n        th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\n          \"rowspan\": rowspan\n        });\n        return tr.appendChild(th);\n      };\n      buildRowHeaders = function(tbody, rowHeaderHeaders, rowHeaderRows, rowHeader, rowAttrs, colAttrs) {\n        var colspan, h, hh, k, len, ref, results, th, tr;\n        hh = rowHeaderHeaders.hh[rowHeader.col];\n        ++hh.expandedCount;\n        ++hh.nHeaders;\n        tr = document.createElement(\"tr\");\n        th = rowHeader.th;\n        th.setAttribute(\"rowspan\", rowHeader.descendants + 1);\n        th.setAttribute(\"data-rowHeader\", th.textContent);\n        if (rowHeader.col === rowAttrs.length - 1 && colAttrs.length !== 0) {\n          th.setAttribute(\"colspan\", 2);\n        }\n        th.setAttribute(\"data-node\", rowHeaderRows.length);\n        tr.appendChild(th);\n        if (rowHeader.children.length !== 0) {\n          th.textContent = \" \" + arrowExpanded + \" \" + th.textContent;\n          th.onclick = function(event) {\n            event = event || window.event;\n            return toggleRow(rowHeaderHeaders, rowHeaderRows, parseInt(event.target.getAttribute(\"data-node\")));\n          };\n          colspan = rowAttrs.length - (rowHeader.col + 1) + (colAttrs.length !== 0 ? 1 : 0);\n          th = createCell(\"th\", \"pvtRowLabel\", '', {\n            \"colspan\": colspan\n          });\n          tr.appendChild(th);\n        }\n        rowHeader.clickStatus = \"expanded\";\n        rowHeader.tr = tr;\n        rowHeaderRows.push(rowHeader);\n        tbody.appendChild(tr);\n        ref = rowHeader.children;\n        results = [];\n        for (k = 0, len = ref.length; k < len; k++) {\n          h = ref[k];\n          results.push(buildRowHeaders(tbody, rowHeaderHeaders, rowHeaderRows, h, rowAttrs, colAttrs));\n        }\n        return results;\n      };\n      buildValues = function(rowHeaderRows, colHeaderCols) {\n        var aggregator, colHeader, flatColKey, flatRowKey, k, l, len, len1, ref, results, rowHeader, style, td, totalAggregator, tr, val;\n        results = [];\n        for (k = 0, len = rowHeaderRows.length; k < len; k++) {\n          rowHeader = rowHeaderRows[k];\n          tr = rowHeader.tr;\n          flatRowKey = rowHeader.flatKey;\n          for (l = 0, len1 = colHeaderCols.length; l < len1; l++) {\n            colHeader = colHeaderCols[l];\n            flatColKey = colHeader.flatKey;\n            aggregator = (ref = tree[flatRowKey][flatColKey]) != null ? ref : {\n              value: (function() {\n                return null;\n              }),\n              format: function() {\n                return \"\";\n              }\n            };\n            val = aggregator.value();\n            style = \"pvtVal\";\n            style = colHeader.children.length !== 0 ? style + \" pvtColSubtotal\" : style;\n            style = rowHeader.children.length !== 0 ? style + \" pvtRowSubtotal\" : style;\n            style = style + \" row\" + rowHeader.row + \" col\" + colHeader.row + \" rowcol\" + rowHeader.col + \" colcol\" + colHeader.col;\n            td = createCell(\"td\", style, aggregator.format(val), {\n              \"data-value\": val\n            });\n            tr.appendChild(td);\n          }\n          totalAggregator = rowTotals[flatRowKey];\n          val = totalAggregator.value();\n          style = \"pvtTotal rowTotal\";\n          style = rowHeader.children.length !== 0 ? style + \" pvtRowSubtotal\" : style;\n          style = style + \" row\" + rowHeader.row + \" rowcol\" + rowHeader.col;\n          td = createCell(\"td\", style, totalAggregator.format(val), {\n            \"data-value\": val,\n            \"data-row\": \"row\" + rowHeader.row,\n            \"data-col\": \"col\" + rowHeader.col\n          });\n          results.push(tr.appendChild(td));\n        }\n        return results;\n      };\n      buildColTotalsHeader = function(rowAttrs, colAttrs) {\n        var colspan, th, tr;\n        tr = document.createElement(\"tr\");\n        colspan = rowAttrs.length + (colAttrs.length === 0 ? 0 : 1);\n        th = createCell(\"th\", \"pvtTotalLabel\", opts.localeStrings.totals, {\n          \"colspan\": colspan\n        });\n        tr.appendChild(th);\n        return tr;\n      };\n      buildColTotals = function(tr, colHeaderCols) {\n        var h, k, len, results, style, td, totalAggregator, val;\n        results = [];\n        for (k = 0, len = colHeaderCols.length; k < len; k++) {\n          h = colHeaderCols[k];\n          totalAggregator = colTotals[h.flatKey];\n          val = totalAggregator.value();\n          style = \"pvtVal pvtTotal colTotal\";\n          style = h.children.length ? style + \" pvtColSubtotal\" : style;\n          style = style + \" col\" + h.row + \" colcol\" + h.col;\n          td = createCell(\"td\", style, totalAggregator.format(val), {\n            \"data-value\": val,\n            \"data-for\": \"col\" + h.col\n          });\n          results.push(tr.appendChild(td));\n        }\n        return results;\n      };\n      buildGrandTotal = function(result, tr) {\n        var td, totalAggregator, val;\n        totalAggregator = allTotal;\n        val = totalAggregator.value();\n        td = createCell(\"td\", \"pvtGrandTotal\", totalAggregator.format(val), {\n          \"data-value\": val\n        });\n        tr.appendChild(td);\n        return result.appendChild(tr);\n      };\n      setColVisibility = function(visibility, h) {\n        h.th.style.display = visibility;\n        if (h.children.length) {\n          $(h.th).closest('table.pvtTable').find('tbody tr td.pvtColSubtotal.col' + h.row + '.colcol' + h.col).css('display', visibility);\n        } else {\n          $(h.th).closest('table.pvtTable').find('tbody tr td.pvtVal.col' + h.row).not('.pvtColSubtotal').css('display', visibility);\n        }\n        if (h.sTh) {\n          return h.sTh.style.display = visibility;\n        }\n      };\n      collapseCol = function(colHeaderHeaders, colHeaderCols, c) {\n        var colHeaderHeader, colspan, d, h, i, k, l, p, ref, ref1, ref2, results;\n        if (!colHeaderCols[c]) {\n          return;\n        }\n        h = colHeaderCols[c];\n        if (h.clickStatus === \"collapsed\") {\n          return;\n        }\n        colspan = 0;\n        for (i = k = 1, ref = h.descendants; 1 <= ref ? k <= ref : k >= ref; i = 1 <= ref ? ++k : --k) {\n          if (!(h.descendants !== 0)) {\n            continue;\n          }\n          d = colHeaderCols[c - i];\n          if (d.th.style.display !== \"none\") {\n            ++colspan;\n            setColVisibility(\"none\", d);\n          }\n        }\n        p = h.parent;\n        while (p !== null) {\n          p.th.setAttribute(\"colspan\", parseInt(p.th.getAttribute(\"colspan\")) - colspan);\n          p = p.parent;\n        }\n        if (h.descendants !== 0) {\n          h.th.textContent = \" \" + arrowCollapsed + \" \" + h.th.getAttribute(\"data-colHeader\");\n        }\n        h.clickStatus = \"collapsed\";\n        h.th.setAttribute(\"colspan\", 1);\n        h.th.style.display = \"\";\n        colHeaderHeader = colHeaderHeaders[h.col];\n        colHeaderHeader.expandedCount--;\n        if (colHeaderHeader.expandedCount === 0) {\n          results = [];\n          for (i = l = ref1 = h.col, ref2 = colHeaderHeaders.length - 2; ref1 <= ref2 ? l <= ref2 : l >= ref2; i = ref1 <= ref2 ? ++l : --l) {\n            colHeaderHeader = colHeaderHeaders[i];\n            colHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + colHeaderHeader.th.getAttribute(\"data-colAttr\");\n            results.push(colHeaderHeader.clickStatus = \"collapsed\");\n          }\n          return results;\n        }\n      };\n      expandChildCol = function(ch) {\n        var gch, k, len, ref, results;\n        if (ch.th.style.display === \"none\") {\n          setColVisibility(\"\", ch);\n        }\n        if (ch.clickStatus !== \"collapsed\") {\n          ref = ch.children;\n          results = [];\n          for (k = 0, len = ref.length; k < len; k++) {\n            gch = ref[k];\n            results.push(expandChildCol(gch));\n          }\n          return results;\n        }\n      };\n      expandCol = function(colHeaderHeaders, colHeaderCols, c) {\n        var ch, colspan, h, hh, k, len, p, ref;\n        if (!colHeaderCols[c]) {\n          return;\n        }\n        h = colHeaderCols[c];\n        if (h.clickStatus === \"expanded\") {\n          return;\n        }\n        colspan = 0;\n        ref = h.children;\n        for (k = 0, len = ref.length; k < len; k++) {\n          ch = ref[k];\n          colspan = colspan + ch.th.colSpan;\n          if (ch.th.style.display === \"none\") {\n            setColVisibility(\"\", ch);\n          }\n          expandChildCol(ch);\n        }\n        if (h.descendants !== 0) {\n          h.th.textContent = \" \" + arrowExpanded + \" \" + h.th.getAttribute(\"data-colHeader\");\n        }\n        h.th.setAttribute(\"colspan\", colspan + 1);\n        h.clickStatus = \"expanded\";\n        h.th.style.display = \"\";\n        if (h.sTh) {\n          h.sTh.style.display = \"\";\n        }\n        p = h.parent;\n        while (p !== null) {\n          p.th.setAttribute(\"colspan\", colspan + parseInt(p.th.getAttribute(\"colspan\")));\n          p = p.parent;\n        }\n        hh = colHeaderHeaders[h.col];\n        ++hh.expandedCount;\n        if (hh.expandedCount === hh.nHeaders) {\n          hh.th.textContent = \" \" + arrowExpanded + \" \" + hh.th.getAttribute(\"data-colAttr\");\n          return hh.clickStatus = \"expanded\";\n        }\n      };\n      collapseRow = function(rowHeaderHeaders, rowHeaderRows, r) {\n        var d, h, i, j, k, l, p, ref, ref1, ref2, results, rowHeaderHeader, rowspan;\n        if (!rowHeaderRows[r]) {\n          return;\n        }\n        h = rowHeaderRows[r];\n        if (h.clickStatus === \"collapsed\") {\n          return;\n        }\n        h.tr.classList.remove(\"expanded\");\n        $(h.tr.children[1]).contents().last().replaceWith(\"\");\n        rowspan = 0;\n        for (i = k = 1, ref = h.descendants; 1 <= ref ? k <= ref : k >= ref; i = 1 <= ref ? ++k : --k) {\n          if (!(h.descendants !== 0)) {\n            continue;\n          }\n          d = rowHeaderRows[r + i];\n          if (d.tr.style.display !== \"none\") {\n            ++rowspan;\n            d.tr.style.display = \"none\";\n          }\n        }\n        p = h.parent;\n        while (p !== null) {\n          p.th.setAttribute(\"rowspan\", parseInt(p.th.getAttribute(\"rowspan\")) - rowspan);\n          p = p.parent;\n        }\n        if (h.descendants !== 0) {\n          h.th.textContent = \" \" + arrowCollapsed + \" \" + h.th.getAttribute(\"data-rowHeader\");\n        }\n        h.clickStatus = \"collapsed\";\n        h.th.setAttribute(\"rowspan\", 1);\n        h.tr.style.display = \"\";\n        rowHeaderHeader = rowHeaderHeaders.hh[h.col];\n        rowHeaderHeader.expandedCount--;\n        if (rowHeaderHeader.expandedCount === 0) {\n          results = [];\n          for (j = l = ref1 = h.col, ref2 = rowHeaderHeaders.hh.length - 2; ref1 <= ref2 ? l <= ref2 : l >= ref2; j = ref1 <= ref2 ? ++l : --l) {\n            rowHeaderHeader = rowHeaderHeaders.hh[j];\n            rowHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + rowHeaderHeader.th.getAttribute(\"data-rowAttr\");\n            results.push(rowHeaderHeader.clickStatus = \"collapsed\");\n          }\n          return results;\n        }\n      };\n      expandChildRow = function(ch) {\n        var gch, k, len, ref, results;\n        if (ch.tr.style.display === \"none\") {\n          ch.tr.style.display = \"\";\n        }\n        if (ch.clickStatus !== \"collapsed\") {\n          ref = ch.children;\n          results = [];\n          for (k = 0, len = ref.length; k < len; k++) {\n            gch = ref[k];\n            results.push(expandChildRow(gch));\n          }\n          return results;\n        }\n      };\n      expandRow = function(rowHeaderHeaders, rowHeaderRows, r) {\n        var ch, h, hh, k, len, p, ref, rowspan;\n        if (!rowHeaderRows[r]) {\n          return;\n        }\n        h = rowHeaderRows[r];\n        if (h.clickStatus === \"expanded\") {\n          return;\n        }\n        h.tr.classList.add(\"expanded\");\n        $(h.tr.children[1]).append(\"Total\");\n        rowspan = 0;\n        ref = h.children;\n        for (k = 0, len = ref.length; k < len; k++) {\n          ch = ref[k];\n          rowspan = rowspan + ch.th.rowSpan;\n          if (ch.tr.style.display === \"none\") {\n            ch.tr.style.display = \"\";\n          }\n          expandChildRow(ch);\n        }\n        if (h.descendants !== 0) {\n          h.th.textContent = \" \" + arrowExpanded + \" \" + h.th.getAttribute(\"data-rowHeader\");\n        }\n        h.th.setAttribute(\"rowspan\", rowspan + 1);\n        h.clickStatus = \"expanded\";\n        h.tr.style.display = \"\";\n        p = h.parent;\n        while (p !== null) {\n          p.th.setAttribute(\"rowspan\", rowspan + parseInt(p.th.getAttribute(\"rowspan\")));\n          p = p.parent;\n        }\n        hh = rowHeaderHeaders.hh[h.col];\n        ++hh.expandedCount;\n        if (hh.expandedCount === hh.nHeaders) {\n          hh.th.textContent = \" \" + arrowExpanded + \" \" + hh.th.getAttribute(\"data-rowAttr\");\n          return hh.clickStatus = \"expanded\";\n        }\n      };\n      toggleCol = function(colHeaderHeaders, colHeaderCols, c) {\n        var h;\n        if (!colHeaderCols[c]) {\n          return;\n        }\n        h = colHeaderCols[c];\n        if (h.clickStatus === \"collapsed\") {\n          expandCol(colHeaderHeaders, colHeaderCols, c);\n        } else {\n          collapseCol(colHeaderHeaders, colHeaderCols, c);\n        }\n        return h.th.scrollIntoView;\n      };\n      toggleRow = function(rowHeaderHeaders, rowHeaderRows, r) {\n        if (!rowHeaderRows[r]) {\n          return;\n        }\n        if (rowHeaderRows[r].clickStatus === \"collapsed\") {\n          return expandRow(rowHeaderHeaders, rowHeaderRows, r);\n        } else {\n          return collapseRow(rowHeaderHeaders, rowHeaderRows, r);\n        }\n      };\n      collapseColsAt = function(colHeaderHeaders, colHeaderCols, colAttrs, colAttr) {\n        var h, hh, i, idx, nAttrs, nCols, results;\n        idx = colAttrs.indexOf(colAttr);\n        if (idx < 0 || idx === colAttrs.length - 1) {\n          return;\n        }\n        i = idx;\n        nAttrs = colAttrs.length - 1;\n        while (i < nAttrs) {\n          hh = colHeaderHeaders[i];\n          hh.th.textContent = \" \" + arrowCollapsed + \" \" + colAttrs[i];\n          hh.clickStatus = \"collapsed\";\n          ++i;\n        }\n        i = 0;\n        nCols = colHeaderCols.length;\n        results = [];\n        while (i < nCols) {\n          h = colHeaderCols[i];\n          if (h.col === idx && h.clickStatus !== \"collapsed\" && h.th.style.display !== \"none\") {\n            collapseCol(colHeaderHeaders, colHeaderCols, parseInt(h.th.getAttribute(\"data-node\")));\n          }\n          results.push(++i);\n        }\n        return results;\n      };\n      expandColsAt = function(colHeaderHeaders, colHeaderCols, colAttrs, colAttr) {\n        var colHeaderHeader, h, hh, i, idx, j, k, nCols, ref, results;\n        idx = colAttrs.indexOf(colAttr);\n        if (idx < 0 || idx === colAttrs.length - 1) {\n          return;\n        }\n        for (i = k = 0, ref = idx; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {\n          hh = colHeaderHeaders[i];\n          hh.th.textContent = \" \" + arrowExpanded + \" \" + colAttrs[i];\n          hh.clickStatus = \"expanded\";\n          j = 0;\n          nCols = colHeaderCols.length;\n          while (j < nCols) {\n            h = colHeaderCols[j];\n            if (h.col === i) {\n              expandCol(colHeaderHeaders, colHeaderCols, j);\n            }\n            ++j;\n          }\n        }\n        ++idx;\n        results = [];\n        while (idx < colAttrs.length - 1) {\n          colHeaderHeader = colHeaderHeaders[idx];\n          if (colHeaderHeader.expandedCount === 0) {\n            colHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + colAttrs[idx];\n            colHeaderHeader.clickStatus = \"collapsed\";\n          } else if (colHeaderHeader.expandedCount === colHeaderHeader.nHeaders) {\n            colHeaderHeader.th.textContent = \" \" + arrowExpanded + \" \" + colAttrs[idx];\n            colHeaderHeader.clickStatus = \"expanded\";\n          }\n          results.push(++idx);\n        }\n        return results;\n      };\n      collapseRowsAt = function(rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) {\n        var h, i, idx, j, nAttrs, nRows, results;\n        idx = rowAttrs.indexOf(rowAttr);\n        if (idx < 0 || idx === rowAttrs.length - 1) {\n          return;\n        }\n        i = idx;\n        nAttrs = rowAttrs.length - 1;\n        while (i < nAttrs) {\n          h = rowHeaderHeaders.hh[i];\n          h.th.textContent = \" \" + arrowCollapsed + \" \" + rowAttrs[i];\n          h.clickStatus = \"collapsed\";\n          ++i;\n        }\n        j = 0;\n        nRows = rowHeaderRows.length;\n        results = [];\n        while (j < nRows) {\n          h = rowHeaderRows[j];\n          if (h.col === idx && h.clickStatus !== \"collapsed\" && h.tr.style.display !== \"none\") {\n            collapseRow(rowHeaderHeaders, rowHeaderRows, j);\n            results.push(j = j + h.descendants + 1);\n          } else {\n            results.push(++j);\n          }\n        }\n        return results;\n      };\n      expandRowsAt = function(rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) {\n        var h, hh, i, idx, j, k, nRows, ref, results, rowHeaderHeader;\n        idx = rowAttrs.indexOf(rowAttr);\n        if (idx < 0 || idx === rowAttrs.length - 1) {\n          return;\n        }\n        for (i = k = 0, ref = idx; 0 <= ref ? k <= ref : k >= ref; i = 0 <= ref ? ++k : --k) {\n          hh = rowHeaderHeaders.hh[i];\n          hh.th.textContent = \" \" + arrowExpanded + \" \" + rowAttrs[i];\n          hh.clickStatus = \"expanded\";\n          j = 0;\n          nRows = rowHeaderRows.length;\n          while (j < nRows) {\n            h = rowHeaderRows[j];\n            if (h.col === i) {\n              expandRow(rowHeaderHeaders, rowHeaderRows, j);\n              j = j + h.descendants + 1;\n            } else {\n              ++j;\n            }\n          }\n        }\n        ++idx;\n        results = [];\n        while (idx < rowAttrs.length - 1) {\n          rowHeaderHeader = rowHeaderHeaders.hh[idx];\n          if (rowHeaderHeader.expandedCount === 0) {\n            rowHeaderHeader.th.textContent = \" \" + arrowCollapsed + \" \" + rowAttrs[idx];\n            rowHeaderHeader.clickStatus = \"collapsed\";\n          } else if (rowHeaderHeader.expandedCount === rowHeaderHeader.nHeaders) {\n            rowHeaderHeader.th.textContent = \" \" + arrowExpanded + \" \" + rowAttrs[idx];\n            rowHeaderHeader.clickStatus = \"expanded\";\n          }\n          results.push(++idx);\n        }\n        return results;\n      };\n      toggleColHeaderHeader = function(colHeaderHeaders, colHeaderCols, colAttrs, colAttr) {\n        var h, idx;\n        idx = colAttrs.indexOf(colAttr);\n        h = colHeaderHeaders[idx];\n        if (h.clickStatus === \"collapsed\") {\n          return expandColsAt(colHeaderHeaders, colHeaderCols, colAttrs, colAttr);\n        } else {\n          return collapseColsAt(colHeaderHeaders, colHeaderCols, colAttrs, colAttr);\n        }\n      };\n      toggleRowHeaderHeader = function(rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr) {\n        var idx, th;\n        idx = rowAttrs.indexOf(rowAttr);\n        th = rowHeaderHeaders.hh[idx];\n        if (th.clickStatus === \"collapsed\") {\n          return expandRowsAt(rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr);\n        } else {\n          return collapseRowsAt(rowHeaderHeaders, rowHeaderRows, rowAttrs, rowAttr);\n        }\n      };\n      main = function(rowAttrs, rowKeys, colAttrs, colKeys) {\n        var colHeaderCols, colHeaderHeaders, colHeaders, h, k, l, len, len1, result, rowHeaderHeaders, rowHeaderRows, rowHeaders, tbody, thead, tr;\n        rowHeaders = [];\n        colHeaders = [];\n        rowHeaderHeaders = {};\n        rowHeaderRows = [];\n        colHeaderHeaders = [];\n        colHeaderCols = [];\n        if (rowAttrs.length !== 0) {\n          rowHeaders = processKeys(rowKeys, \"pvtRowLabel\");\n        }\n        if (colAttrs.length !== 0) {\n          colHeaders = processKeys(colKeys, \"pvtColLabel\");\n        }\n        result = document.createElement(\"table\");\n        result.className = \"pvtTable\";\n        result.style.display = \"none\";\n        thead = document.createElement(\"thead\");\n        result.appendChild(thead);\n        if (colAttrs.length !== 0) {\n          buildColHeaderHeaders(thead, colHeaderHeaders, rowAttrs, colAttrs);\n          for (k = 0, len = colHeaders.length; k < len; k++) {\n            h = colHeaders[k];\n            buildColHeaders(colHeaderHeaders, colHeaderCols, h, rowAttrs, colAttrs);\n          }\n          buildColHeaderHeadersClickEvents(colHeaderHeaders, colHeaderCols, colAttrs);\n        }\n        if (rowAttrs.length !== 0) {\n          buildRowHeaderHeaders(thead, rowHeaderHeaders, rowAttrs, colAttrs);\n          if (colAttrs.length === 0) {\n            buildRowTotalsHeader(rowHeaderHeaders.tr, rowAttrs, colAttrs);\n          }\n        }\n        if (colAttrs.length !== 0) {\n          buildRowTotalsHeader(colHeaderHeaders[0].tr, rowAttrs, colAttrs);\n        }\n        tbody = document.createElement(\"tbody\");\n        result.appendChild(tbody);\n        if (rowAttrs.length !== 0) {\n          for (l = 0, len1 = rowHeaders.length; l < len1; l++) {\n            h = rowHeaders[l];\n            buildRowHeaders(tbody, rowHeaderHeaders, rowHeaderRows, h, rowAttrs, colAttrs);\n          }\n          buildRowHeaderHeadersClickEvents(rowHeaderHeaders, rowHeaderRows, rowAttrs);\n        }\n        buildValues(rowHeaderRows, colHeaderCols);\n        tr = buildColTotalsHeader(rowAttrs, colAttrs);\n        if (colAttrs.length !== 0) {\n          buildColTotals(tr, colHeaderCols);\n        }\n        buildGrandTotal(tbody, tr);\n        result.setAttribute(\"data-numrows\", rowKeys.length);\n        result.setAttribute(\"data-numcols\", colKeys.length);\n        if (!opts.collapseRowsAt && !opts.collapseColsAt) {\n          result.style.display = \"\";\n        }\n        if (opts.collapseRowsAt) {\n          setTimeout((function() {\n            collapseRowsAt(rowHeaderHeaders, rowHeaderRows, rowAttrs, opts.collapseRowsAt);\n            if (!opts.collapseColsAt) {\n              return result.style.display = \"\";\n            }\n          }), 0);\n        }\n        if (opts.collapseColsAt) {\n          setTimeout((function() {\n            collapseColsAt(colHeaderHeaders, colHeaderCols, colAttrs, opts.collapseColsAt);\n            return result.style.display = \"\";\n          }), 0);\n        }\n        return result;\n      };\n      return main(rowAttrs, rowKeys, colAttrs, colKeys);\n    };\n    return $.pivotUtilities.subtotal_renderers = {\n      \"Table With Subtotal\": function(pvtData, opts) {\n        return SubtotalRenderer(pvtData, opts);\n      },\n      \"Table With Subtotal Bar Chart\": function(pvtData, opts) {\n        return $(SubtotalRenderer(pvtData, opts)).barchart();\n      },\n      \"Table With Subtotal Heatmap\": function(pvtData, opts) {\n        return $(SubtotalRenderer(pvtData, opts)).heatmap(\"heatmap\", opts);\n      },\n      \"Table With Subtotal Row Heatmap\": function(pvtData, opts) {\n        return $(SubtotalRenderer(pvtData, opts)).heatmap(\"rowheatmap\", opts);\n      },\n      \"Table With Subtotal Col Heatmap\": function(pvtData, opts) {\n        return $(SubtotalRenderer(pvtData, opts)).heatmap(\"colheatmap\", opts);\n      }\n    };\n  });\n\n}).call(this);\n\n//# sourceMappingURL=subtotal.js.map\n"],"sourceRoot":"/source/"}